class Solution
{
    public:
    //Function to return the minimum cost of connecting the ropes.
    long long minCost(long long arr[], long long n) {
        //first we make a min heap
        priority_queue<long long,vector<long long>,greater<long long>>minheap;
        //insert all element to minheap
        for(long long i=0;i<n;i++){
            minheap.push(arr[i]);
        }
        long long cost=0;
        //long long size=minheap.size();
        while(n>1){
            long long a=minheap.top();
            minheap.pop();
            long long b=minheap.top();
            minheap.pop();
            long long sum=a+b;
            cost=cost+sum;
            minheap.push(sum);
            n--;
        }
        return cost;
    }
};
